{"version":3,"sources":["../../src/kafka/producer.js"],"names":["kafka","require","Producer","client","KafkaClient","kafkaHost","envVariables","KAFKA_BROKER_HOST","connectRetryOptions","retries","producer","on","logger","info","err","error","stack"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;AADA,IAAIA,QAAQC,QAAQ,YAAR,CAAZ;;;AAGA,IAAMC,WAAWF,MAAME,QAAvB;AACA,IAAIC,eAAJ;AACA;AACA;AACAA,SAAS,IAAIH,MAAMI,WAAV,CAAsB,EAAEC,WAAWC,+BAAaC,iBAA1B,EAA6CC,qBAAqB,EAACC,SAAS,CAAV,EAAlE,EAAtB,CAAT;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,IAAIR,QAAJ,CAAaC,MAAb,CAAjB;;AAEAO,SAASC,EAAT,CAAY,OAAZ,EAAqB,YAAW;AAC9BC,mBAAOC,IAAP,CAAY,mBAAZ;AACD,CAFD;;AAIAH,SAASC,EAAT,CAAY,OAAZ,EAAqB,UAASG,GAAT,EAAc;AACjCF,mBAAOG,KAAP,CAAa,4BAAb;AACAH,mBAAOG,KAAP,CAAaD,IAAIE,KAAJ,IAAaF,GAA1B;AACD,CAHD;;kBAKeJ,Q","file":"producer.js","sourcesContent":["import logger from \"../config/logger\";\nvar kafka = require(\"kafka-node\");\nimport envVariables from \"../EnvironmentVariables\";\n\nconst Producer = kafka.Producer;\nlet client;\n// if (process.env.NODE_ENV === \"development\") {\n// client = new kafka.Client();\nclient = new kafka.KafkaClient({ kafkaHost: envVariables.KAFKA_BROKER_HOST, connectRetryOptions: {retries: 1} });\n//   console.log(\"local - \");\n// } else {\n//   client = new kafka.KafkaClient({ kafkaHost: envVariables.KAFKA_BROKER_HOST });\n//   console.log(\"cloud - \");\n// }\n\nconst producer = new Producer(client);\n\nproducer.on(\"ready\", function() {\n  logger.info(\"Producer is ready\");\n});\n\nproducer.on(\"error\", function(err) {\n  logger.error(\"Producer is in error state\");\n  logger.error(err.stack || err);\n});\n\nexport default producer;\n"]}