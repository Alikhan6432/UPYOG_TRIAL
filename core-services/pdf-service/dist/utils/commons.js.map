{"version":3,"sources":["../../src/utils/commons.js"],"names":["moment","require","datetimezone","envVariables","DATE_TIMEZONE","egovLocHost","EGOV_LOCALISATION_HOST","egovLocSearchCall","EGOV_LOCALISATION_SEARCH","defaultLocale","DEFAULT_LOCALISATION_LOCALE","defaultTenant","DEFAULT_LOCALISATION_TENANT","getTransformedLocale","label","toUpperCase","replace","findLocalisation","requestInfo","moduleList","codeList","locale","msgId","split","length","console","log","statetenantid","url","request","RequestInfo","messageSearchCriteria","tenantId","codes","module","toString","headers","accept","axios","post","catch","error","response","data","responseBody","getLocalisationkey","prefix","key","isCategoryRequired","isMainTypeRequired","isSubTypeRequired","delimiter","keyArray","localisedLabels","isArray","push","map","item","codeFromKey","getLocalisationLabel","undefined","getDateInRequiredFormat","et","dateformat","tz","format","getValue","value","defaultValue","path","convertFooterStringtoFunctionIfExist","footer","Function"],"mappings":"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","file":"commons.js","sourcesContent":["import axios from \"axios\";\nimport envVariables from \"../EnvironmentVariables\";\nimport get from \"lodash/get\";\nvar moment = require(\"moment-timezone\");\n\nlet datetimezone = envVariables.DATE_TIMEZONE;\nlet egovLocHost = envVariables.EGOV_LOCALISATION_HOST;\nlet egovLocSearchCall = envVariables.EGOV_LOCALISATION_SEARCH;\nlet defaultLocale = envVariables.DEFAULT_LOCALISATION_LOCALE;\nlet defaultTenant = envVariables.DEFAULT_LOCALISATION_TENANT;\nexport const getTransformedLocale = (label) => {\n  return label.toUpperCase().replace(/[.:-\\s\\/]/g, \"_\");\n};\n\n/**\n * This function returns localisation label from keys based on needs\n * This function does optimisation to fetch one module localisation values only once\n * @param {*} requestInfo - requestinfo from client\n * @param {*} localisationMap - localisation map containing localisation key,label fetched till now\n * @param {*} prefix - prefix to be added before key before fetching localisation ex:-\"MODULE_NAME_MASTER_NAME\"\n * @param {*} key - key to fetch localisation\n * @param {*} moduleName - \"module name for fetching localisation\"\n * @param {*} localisationModuleList - \"list of modules for which localisation was already fetched\"\n * @param {*} isCategoryRequired - ex:- \"GOODS_RETAIL_TST-1\" = get localisation for \"GOODS\"\n * @param {*} isMainTypeRequired  - ex:- \"GOODS_RETAIL_TST-1\" = get localisation for \"RETAIL\"\n * @param {*} isSubTypeRequired  - - ex:- \"GOODS_RETAIL_TST-1\" = get localisation for \"GOODS_RETAIL_TST-1\"\n */\nexport const findLocalisation = async (\n  requestInfo,\n  moduleList,\n  codeList\n) => {\n  let locale = requestInfo.msgId;\n  if (null != locale) {\n    locale = locale.split(\"|\");\n    locale = locale.length > 1 ? locale[1] : defaultLocale;\n  } else {\n    locale = defaultLocale;\n  }\n  console.log(requestInfo)\n  console.log(defaultTenant)\n  let statetenantid = get(\n    requestInfo,\n    \"userInfo.tenantId\",\n    defaultTenant\n  ).split(\".\")[0];\n\n\n  let url = egovLocHost + egovLocSearchCall;\n\n  let request = { \n    RequestInfo: requestInfo,\n    messageSearchCriteria:{\n      tenantId: statetenantid,\n      locale: locale,\n      codes: []\n    }\n  };\n\n  request.messageSearchCriteria.module = moduleList.toString();\n  request.messageSearchCriteria.codes = codeList.toString().split(\",\");\n\n  let headers = {\n    headers:{\n      \"content-type\": \"application/json;charset=UTF-8\",\n      accept: \"application/json, text/plain, */*\"\n    }\n  };\n  console.log(\"localization call\");\n  console.log(\"localization call url=\" + url);\n  console.log(request);\n  console.log(headers);\n  let responseBody = await axios.post(url,request,headers)\n  .catch((error) => {\n    console.log(error);\n    throw error.response.data });\n  \n  return responseBody.data;\n}\nexport const getLocalisationkey = async (\n  prefix,\n  key,\n  isCategoryRequired,\n  isMainTypeRequired,\n  isSubTypeRequired,\n  delimiter = \" / \"\n) => {\n\n  let keyArray = [];\n  let localisedLabels = [];\n  let isArray = false;\n\n  if (key == null) {\n    return key;\n  } else if (typeof key == \"string\" || typeof key == \"number\") {\n    keyArray.push(key);\n  } else {\n    keyArray = key;\n    isArray = true;\n  }\n\n  keyArray.map((item) => {\n    let codeFromKey = \"\";\n\n    // append main category in the beginning\n    if (isCategoryRequired) {\n        codeFromKey = getLocalisationLabel(\n        item.split(\".\")[0],\n        prefix\n      );\n    }\n\n    if (isMainTypeRequired) {\n     if (isCategoryRequired) codeFromKey = `${codeFromKey}${delimiter}`;\n        codeFromKey = getLocalisationLabel(\n        item.split(\".\")[1],\n        prefix\n      );\n    }\n\n    if (isSubTypeRequired) {\n      if (isMainTypeRequired || isCategoryRequired)\n        codeFromKey = `${codeFromKey}${delimiter}`;\n        codeFromKey = `${codeFromKey}${getLocalisationLabel(\n        item,\n        prefix\n      )}`;\n    }\n\n    if (!isCategoryRequired && !isMainTypeRequired && !isSubTypeRequired) {\n      codeFromKey = getLocalisationLabel(item, prefix);\n    }\n\n    localisedLabels.push(codeFromKey === \"\" ? item : codeFromKey);\n  });\n  if (isArray) {\n    return localisedLabels;\n  }\n  return localisedLabels[0];\n};\n\nconst getLocalisationLabel = (key, prefix) => {\n  if (prefix != undefined && prefix != \"\") {\n    key = `${prefix}_${key}`;\n  }\n  key = getTransformedLocale(key);\n  return key;\n};\n\nexport const getDateInRequiredFormat = (et, dateformat = \"DD/MM/YYYY\") => {\n  if (!et) return \"NA\";\n  // var date = new Date(Math.round(Number(et)));\n  return moment(et).tz(datetimezone).format(dateformat);\n};\n\n/**\n *\n * @param {*} value - values to be checked\n * @param {*} defaultValue - default value\n * @param {*} path  - jsonpath from where the value was fetched\n */\nexport const getValue = (value, defaultValue, path) => {\n  if (\n    value == undefined ||\n    value == null ||\n    value.length === 0 ||\n    (value.length === 1 && (value[0] === null || value[0] === \"\"))\n  ) {\n    // logger.error(`no value found for path: ${path}`);\n    return defaultValue;\n  } else return value;\n};\n\nexport const convertFooterStringtoFunctionIfExist = (footer) => {\n  if (footer != undefined) {\n    footer = Function(`'use strict'; return (${footer})`)();\n  }\n  console.log(footer)\n  return footer;\n};\n"]}