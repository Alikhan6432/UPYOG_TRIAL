{"version":3,"sources":["../../src/api/api.js"],"names":["httpRequest","endPoint","requestBody","headers","defaultheader","instance","axios","create","defaults","Object","assign","post","response","responseStatus","parseInt","status","data","errorResponse","logger","error","stack","message"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAMA;AAAA,sFAAa,iBACtBC,QADsB,EAEtBC,WAFsB;AAAA,QAGtBC,OAHsB,uEAGdC,aAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAKlBC,oBALkB,GAKTC,gBAAMC,MAAN,CAAa;AACxBN,wBAASA,QADe;AAExBC,2BAAYA;;AAFY,aAAb,CALS;;AAUtB,gBAAIC,OAAJ,EACAE,SAASG,QAAT,GAAoBC,OAAOC,MAAP,CAAcL,SAASG,QAAvB,EAAiC;AACnDL;AADmD,aAAjC,CAApB;;AAXsB;AAAA;AAAA,mBAiBAE,SAASM,IAAT,CAAcV,QAAd,EAAuBC,WAAvB,CAjBA;;AAAA;AAiBlBU,oBAjBkB;AAkBlBC,0BAlBkB,GAkBDC,SAASF,SAASG,MAAlB,EAA0B,EAA1B,CAlBC;;AAAA,kBAmBpBF,mBAAmB,GAAnB,IAA0BA,mBAAmB,GAnBzB;AAAA;AAAA;AAAA;;AAAA,6CAqBfD,SAASI,IArBM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwBpBC,yBAxBoB,GAwBJ,YAAML,QAxBF;;AAyBxBM,6BAAOC,KAAP,CAAa,YAAMC,KAAN,eAAb;AAzBwB,kBA0BlB,EAACC,SAAQ,2CAAyCpB,QAAzC,GAAkD,+BAAlD,IAAmFgB,gBAAgBH,SAASG,cAAcF,MAAvB,EAA+B,EAA/B,CAAhB,GAAmD,YAAMM,OAA5I,CAAT,EA1BkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAgCL,IAAMjB,gBAAc;AAClB,kBAAgB,gCADE;AAElB,YAAS;AAFS,CAApB","file":"api.js","sourcesContent":["import axios from 'axios';\nimport logger from \"../config/logger\";\n// const instance = axios.create({\n//     endPoint: \"https://egov-micro-dev.egovernments.org/\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     }\n//   });\n\nexport const httpRequest= async(\n    endPoint,    \n    requestBody,\n    headers=defaultheader\n)=>{\n    let instance=axios.create({\n      endPoint:endPoint,\n      requestBody:requestBody\n      \n    })\n    if (headers)\n    instance.defaults = Object.assign(instance.defaults, {\n      headers,\n    });\n    \ntry {\n  //console.log(endPoint);\n  const response =  await instance.post(endPoint,requestBody);\n  const responseStatus = parseInt(response.status, 10);\n  if (responseStatus === 200 || responseStatus === 201) {\n     //console.log(response.data);\n    return response.data;\n    }\n} catch (error) {\n  var errorResponse = error.response;\n  logger.error(error.stack || error) ; \n  throw {message:\"error occured while making request to \"+endPoint+\": response returned by call :\"+(errorResponse ? parseInt(errorResponse.status, 10):error.message)};  \n}\n    \n}\n\n\n  const defaultheader={\n    \"content-type\": \"application/json;charset=UTF-8\",\n    \"accept\":\"application/json, text/plain, */*\" \n   }\n\n\n\n"]}